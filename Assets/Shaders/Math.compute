#ifndef     __MMath__
#define     __MMath__

#define TOLLERANCE  0.001

float3 normalizedVector(float3 v) 
{
    float len = length (v);
    return (len >= TOLLERANCE) ? v / len : (float3)0 ;
}

uint to1D(uint3 index, uint3 dimen) 
{
    return index.z * dimen.x * dimen.y + index.y * dimen.x + index.x;
}

uint3 to3D(uint index, uint3 dimen) 
{
    uint z = index / (dimen.x * dimen.y);
    index -= z * dimen.x * dimen.y;
    uint y = index / dimen.x;
    uint x = index % dimen.x;
    return uint3(x, y, z);
}

uint nextPowerOfTwo(uint v)
{
    v--;
    v |= v >> 1;
    v |= v >> 2;
    v |= v >> 4;
    v |= v >> 8;
    v |= v >> 16;
    v++;
    return v;
}

#endif